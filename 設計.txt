開発ができたら修正します。

RPGクエストシステム設計書

1. アーキテクチャ設計

1.1 概要

RPGクエストシステムは、Minecraftのプラグインとして実装され、プレイヤーがクエストを受注・達成することでランクアップし、報酬を得ることができるシステムです。このシステムは、主に以下のコンポーネントで構成されます。

メインプラグインクラス
コマンド
マネージャークラス
データモデル

1.2 メインプラグインクラス

プラグインの起動・停止処理
コマンドの登録

1.3 コマンド

ゲームが開始できるコマンド
現在のクエストの確認をするコマンド
個別のNPCを召喚するコマンド
召喚したNPCを消去するコマンド

1.4 マネージャークラス

クエストの管理
NPCの管理

1.5 イベント

各コマンド内で処理を書く

1.6 データモデル

クエストデータを表現するモデル

2. クラス設計

2.1 Mainクラス

プラグインのエントリーポイント
コマンドの登録メソッド

2.2 コマンド

BaseCommand: コマンドの基底クラス
GameStart: ゲームが開始できるコマンド
QuestStatus: 現在のクエストの確認をするコマンド
VisitNpc: 個別のNPCを召喚するコマンド
LetsGoAdventure: 召喚したNPCを消去するコマンド

2.3 マネージャークラス

QuestManager: クエストの管理を行う
NPCManager: NPCの管理を行う

2.4 イベント

各コマンド内で処理を書く

2.5 データモデル

Quest: クエストのデータモデル

3. 処理フロー設計

3.1 ゲーム開始時

プレイヤーがゲーム開始コマンドを入力
メインプラグインクラスがコマンドを受け取り、プレイヤーの付近にNPCをスポーン

3.2 クエスト受注

プレイヤーがクエスト受注NPCに話しかける
インベントリGUIが開き、クエストリストが表示される
プレイヤーがクエストを選択
クエストの詳細が表示され、「クエストを受ける」ボタンで受注
クエスト受注後、プレイヤーのインベントリにクエストアイテムが追加される

3.3 クエスト進行状況確認

プレイヤーが進行状況確認コマンドを入力
クエストの進行状況が表示される

3.4 クエスト提出

プレイヤーがクエスト提出NPCに話しかける
クエスト提出アイテムを渡すとクエストが完了

3.5 NPC召喚

プレイヤーがNPC召喚コマンドを入力
指定されたタイプのNPCがプレイヤーの近くにスポーン

4. テスト設計

4.1 ユニットテスト

各コマンドハンドラのテスト
各マネージャークラスのロジックのテスト

4.2 インテグレーションテスト

コマンド実行後の全体的な動作確認
クエストの受注、提出、進行状況の表示のシナリオテスト

5. 非機能要件

5.1 拡張性・保守性の考慮

クエストやNPCの追加・変更が容易であること
外部設定ファイルでクエストやNPCの設定を行う

5.2 パフォーマンス

コマンドやイベントハグンドリンのレスポンスが迅速であること

5.3 NPCの個別召喚

任意の場所でNPCを召喚するためのコマンドを実装する

5.4 NPCの削除

召喚したNPCを削除するコマンドを実装する

6. その他の要件

6.1 クエスト管理のルール

プレイヤーのランクより低いクエストではランクアップできない
クエスト達成でネザースターを報酬として提供
ネザースターでアイテムを購入可能

6.2 インターフェース

ゲーム開始コマンドでNPCをスポーン
クエストの進行状況の表示
クエスト受注制限（同時進行可能なクエスト数の上限(3つ)、クールタイムの設定）
